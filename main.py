import logging
import os
from datetime import datetime
from typing import Dict, Any

from telegram import (
    Update,
    ReplyKeyboardMarkup,
    KeyboardButton,
    ReplyKeyboardRemove,
    Contact,
)
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    ConversationHandler,
    ContextTypes,
    filters,
)

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –°—Ç–∞–¥–∏–∏ –¥–∏–∞–ª–æ–≥–∞
BEEN_BEFORE, BRANCH, AGE, TIME, CHILD_INFO, PHONE = range(6)

# –¢–µ–∫—Å—Ç—ã
WELCOME = (
    "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –°–¢–û–õ–Ø–†–ö–û–ë–û–¢üëã\n\n"
    "–í –°—Ç–æ–ª—è—Ä–∫–∏–Ω–æ –≤–∞—à —Ä–µ–±–µ–Ω–æ–∫ –Ω–∞—É—á–∏—Ç—Å—è –º–∞—Å—Ç–µ—Ä–∏—Ç—å –∏–∑ –¥–µ—Ä–µ–≤–∞, —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ —Å—Ç–∞–Ω–∫–∞—Ö –∏ —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏, "
    "—Å—Ç–∞–Ω–µ—Ç –Ω–∞—Å—Ç–æ—è—â–∏–º —Ö–æ–∑—è–∏–Ω–æ–º –≤ –¥–æ–º–µ ‚öíÔ∏è\n\n"
    "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –Ω–∞—à—É –º–∞—Å—Ç–µ—Ä—Å–∫—É—é –∏ –∑–∞–Ω—è—Ç—å –º–µ—Å—Ç–æ –≤ –≥—Ä—É–ø–ø–µ.\n"
    "–¢–µ–º –±–æ–ª–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–æ–≤—ã–π —É—á–µ–±–Ω—ã–π –≥–æ–¥ —É–∂–µ –≥–æ—Ç–æ–≤–æ ü§ó\n\n"
    "–°–∫–∞–∂–∏—Ç–µ, –≤—ã —É–∂–µ –±—ã–ª–∏ —É –Ω–∞—Å?"
)
STEP2 = "–ü–æ–Ω—è–ª –≤–∞—Å üòá\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª–∏–∞–ª, –≤ –∫–æ—Ç–æ—Ä—ã–π –≤–∞–º —É–¥–æ–±–Ω–µ–µ —Ö–æ–¥–∏—Ç—å:"
STEP3 = "–û—Ç–ª–∏—á–Ω–æ üòä\n\n–¢–µ–ø–µ—Ä—å –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –≥—Ä—É–ø–ø–æ–π –≤–∞—à–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞"
STEP4 = "–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–æ—Å–µ—â–µ–Ω–∏—è –°—Ç–æ–ª—è—Ä–∫–∏–Ω–æ üëá"
STEP5 = (
    "–û—Å—Ç–∞–ª–æ—Å—å –ø–∞—Ä–∞ —à–∞–≥–æ–≤ ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ –§–ò —Ä–µ–±–µ–Ω–∫–∞ –∏ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è\n\n"
    "–ù–∞–ø—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω, 14.02.2017"
)
STEP6 = (
    "–ò –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ‚úçÔ∏è\n\n"
    "–ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–º –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω¬ª."
)
CANCELLED = "–î–∏–∞–ª–æ–≥ –æ—Ç–º–µ–Ω—ë–Ω. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ ‚Äî –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start"

# –ö–Ω–æ–ø–∫–∏
YES_NO_KB = ReplyKeyboardMarkup([["–î–∞", "–ù–µ—Ç"]], resize_keyboard=True)
BRANCH_KB = ReplyKeyboardMarkup([["—É–ª. –ù–æ–≤–æ—Å—ë–ª–æ–≤, 105"]], resize_keyboard=True)
AGE_KB = ReplyKeyboardMarkup([["4‚Äì6 –ª–µ—Ç", "7‚Äì9 –ª–µ—Ç", "10+ –ª–µ—Ç"]], resize_keyboard=True)
TIME_KB = ReplyKeyboardMarkup(
    [["–ß–µ—Ç–≤–µ—Ä–≥ 17:30", "–°—É–±–±–æ—Ç–∞ 10:00", "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ 10:00"]],
    resize_keyboard=True,
)
PHONE_KB = ReplyKeyboardMarkup(
    [[KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω", request_contact=True)]],
    resize_keyboard=True,
)

# –ü–∞–º—è—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–∞
user_data_store: Dict[int, Dict[str, Any]] = {}

# /id
async def my_id(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(f"–í–∞—à chat_id: {update.effective_chat.id}")

# –°—Ü–µ–Ω–∞—Ä–∏–π
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    uid = update.effective_user.id
    user_data_store[uid] = {"started_at": datetime.utcnow().isoformat()}
    await update.message.reply_text(WELCOME, reply_markup=YES_NO_KB)
    return BEEN_BEFORE

async def been_before(update: Update, context: ContextTypes.DEFAULT_TYPE):
    uid = update.effective_user.id
    user_data_store[uid]["been_before"] = (update.message.text or "").strip()
    await update.message.reply_text(STEP2, reply_markup=BRANCH_KB)
    return BRANCH

async def choose_branch(update: Update, context: ContextTypes.DEFAULT_TYPE):
    uid = update.effective_user.id
    user_data_store[uid]["branch"] = (update.message.text or "").strip()
    await update.message.reply_text(STEP3, reply_markup=AGE_KB)
    return AGE

async def choose_age(update: Update, context: ContextTypes.DEFAULT_TYPE):
    uid = update.effective_user.id
    user_data_store[uid]["age_group"] = (update.message.text or "").strip()
    await update.message.reply_text(STEP4, reply_markup=TIME_KB)
    return TIME

async def choose_time(update: Update, context: ContextTypes.DEFAULT_TYPE):
    uid = update.effective_user.id
    user_data_store[uid]["time_slot"] = (update.message.text or "").strip()
    await update.message.reply_text(STEP5, reply_markup=ReplyKeyboardRemove())
    return CHILD_INFO

async def child_info(update: Update, context: ContextTypes.DEFAULT_TYPE):
    uid = update.effective_user.id
    user_data_store[uid]["child_info"] = (update.message.text or "").strip()
    await update.message.reply_text(STEP6, reply_markup=PHONE_KB)
    return PHONE

async def phone_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    uid = update.effective_user.id
    user_data_store[uid]["phone"] = (update.message.text or "").strip()
    await send_final(update, context)
    return ConversationHandler.END

async def phone_contact(update: Update, context: ContextTypes.DEFAULT_TYPE):
    uid = update.effective_user.id
    contact: Contact = update.message.contact
    user_data_store[uid]["phone"] = contact.phone_number if contact else ""
    await send_final(update, context)
    return ConversationHandler.END

async def send_final(update: Update, context: ContextTypes.DEFAULT_TYPE):
    uid = update.effective_user.id
    data = user_data_store.get(uid, {})

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ‚Äî —Ç–æ–ª—å–∫–æ —Ñ–∏–Ω–∞–ª —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º
    final_msg = (
        f"–£—Ä–∞! –Ø –≤–∞—Å –∑–∞–ø–∏—Å–∞–ª üòç\n\n"
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤—Ä–µ–º—è: {data.get('time_slot','')}\n\n"
        "–ù–∞—à –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –ø–æ—Å–ª–µ –Ω–∞—à–µ–≥–æ –æ—Ç–ø—É—Å–∫–∞.\n\n"
        "–ê –ø–æ–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª:\n"
        "–°–¢–û–õ–Ø–†–ö–ò–ù–û ‚Äî https://t.me/stolyarkaizh\n"
        "–¢–∞–º –±—É–¥—É—Ç –≤—Å–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ –∂–∏–∑–Ω–∏ –Ω–∞—à–µ–π –º–∞—Å—Ç–µ—Ä—Å–∫–æ–π ü§ó"
    )
    await update.message.reply_text(final_msg, reply_markup=ReplyKeyboardRemove())

    # –ê–¥–º–∏–Ω-–≥—Ä—É–ø–ø–∞
    ADMIN_GROUP_ID = -4926335845
    summary = (
        "<b>üìã –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å –≤ –°—Ç–æ–ª—è—Ä–∫–∏–Ω–æ</b>\n\n"
        f"üë§ <b>–ë—ã–ª —É –Ω–∞—Å:</b> {data.get('been_before','')}\n"
        f"üìç <b>–§–∏–ª–∏–∞–ª:</b> {data.get('branch','')}\n"
        f"üéØ <b>–í–æ–∑—Ä–∞—Å—Ç:</b> {data.get('age_group','')}\n"
        f"üïí <b>–í—Ä–µ–º—è:</b> {data.get('time_slot','')}\n"
        f"üßí <b>–†–µ–±—ë–Ω–æ–∫:</b> {data.get('child_info','')}\n"
        f"üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {data.get('phone','')}\n"
        f"‚è± <b>–°–æ–∑–¥–∞–Ω–æ:</b> {data.get('started_at','')}"
    )
    await context.bot.send_message(chat_id=ADMIN_GROUP_ID, text=summary, parse_mode="HTML")

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(CANCELLED, reply_markup=ReplyKeyboardRemove())
    return ConversationHandler.END

def main():
    bot_token = os.getenv("BOT_TOKEN")
    if not bot_token:
        raise RuntimeError("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω–∞ –≤ Render")
    app = Application.builder().token(bot_token).build()

    app.add_handler(CommandHandler("id", my_id))

    conv = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            BEEN_BEFORE: [MessageHandler(filters.TEXT & ~filters.COMMAND, been_before)],
            BRANCH:      [MessageHandler(filters.TEXT & ~filters.COMMAND, choose_branch)],
            AGE:         [MessageHandler(filters.TEXT & ~filters.COMMAND, choose_age)],
            TIME:        [MessageHandler(filters.TEXT & ~filters.COMMAND, choose_time)],
            CHILD_INFO:  [MessageHandler(filters.TEXT & ~filters.COMMAND, child_info)],
            PHONE: [
                MessageHandler((filters.TEXT & ~filters.COMMAND) & ~filters.CONTACT, phone_text),
                MessageHandler(filters.CONTACT, phone_contact),
            ],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
        allow_reentry=True,
    )
    app.add_handler(conv)

    app.run_polling()

if __name__ == "__main__":
    main()
